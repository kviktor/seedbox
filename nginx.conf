server {
    listen 80;
    listen 443 ssl;
    server_name xy.com;
    server_tokens off;

    ssl_prefer_server_ciphers On;
    ssl_session_cache shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;


    ssl_certificate /etc/letsencrypt/live/xy.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/xy.com/privkey.pem;

    location /.well-known {
        alias /usr/share/nginx/html/.well-known;
    }

    location / {
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;

        proxy_pass http://localhost:8112/;
        proxy_set_header X-Deluge-Base "/";
        add_header X-Frame-Options SAMEORIGIN;

        proxy_connect_timeout   1s;
        proxy_send_timeout      600;
        proxy_read_timeout      36000s;  ## Timeout after 10 hours
        proxy_buffer_size       64k;
        proxy_buffers           16 32k;
        proxy_pass_header       Set-Cookie;
        proxy_hide_header       Vary;

        proxy_busy_buffers_size         64k;
        proxy_temp_file_write_size      64k;

        proxy_set_header        Accept-Encoding         '';
        proxy_ignore_headers    Cache-Control           Expires;
        proxy_set_header        Referer                 $http_referer;
        proxy_set_header        Host                    $host;
        proxy_set_header        Cookie                  $http_cookie;
        proxy_set_header        X-Real-IP               $remote_addr;
        proxy_set_header        X-Forwarded-Host        $host;
        proxy_set_header        X-Forwarded-Server      $host;
        proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Port        '443';
        proxy_set_header        X-Forwarded-Ssl         on;
        proxy_set_header        X-Forwarded-Proto       https;
        proxy_set_header        Authorization           '';

        proxy_buffering         off;
        proxy_redirect          off;
    }

    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
}
